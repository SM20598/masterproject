//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
//
// JR_3_2.cpp
//
// Code generation for function 'JR_3_2'
//

// Include files
#include "JR_3_2.h"
#include "limits"
#include <cmath>

// Function Declarations
static double rt_powd_snf(double u0, double u1);

// Function Definitions
static double rt_powd_snf(double u0, double u1)
{
  double y;
  if (std::isnan(u0) || std::isnan(u1)) {
    y = std::numeric_limits<double>::quiet_NaN();
  } else {
    double d;
    double d1;
    d = std::abs(u0);
    d1 = std::abs(u1);
    if (std::isinf(u1)) {
      if (d == 1.0) {
        y = 1.0;
      } else if (d > 1.0) {
        if (u1 > 0.0) {
          y = std::numeric_limits<double>::infinity();
        } else {
          y = 0.0;
        }
      } else if (u1 > 0.0) {
        y = 0.0;
      } else {
        y = std::numeric_limits<double>::infinity();
      }
    } else if (d1 == 0.0) {
      y = 1.0;
    } else if (d1 == 1.0) {
      if (u1 > 0.0) {
        y = u0;
      } else {
        y = 1.0 / u0;
      }
    } else if (u1 == 2.0) {
      y = u0 * u0;
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
      y = std::sqrt(u0);
    } else if ((u0 < 0.0) && (u1 > std::floor(u1))) {
      y = std::numeric_limits<double>::quiet_NaN();
    } else {
      y = std::pow(u0, u1);
    }
  }
  return y;
}

void JR_3_2(double l, const double in2[12], double JR[18])
{
  double b_t105_tmp;
  double b_t115_tmp;
  double b_t131_tmp;
  double b_t172_tmp;
  double b_t173_tmp;
  double b_t175_tmp;
  double b_t176_tmp;
  double c_t175_tmp;
  double c_t176_tmp;
  double d_t176_tmp;
  double e_t176_tmp;
  double f_t176_tmp;
  double g_t176_tmp;
  double h_t176_tmp;
  double i_t176_tmp;
  double j_t176_tmp;
  double k_t176_tmp;
  double l_t176_tmp;
  double m_t176_tmp;
  double n_t176_tmp;
  double o_t176_tmp;
  double p_t176_tmp;
  double q_t176_tmp;
  double t10;
  double t101;
  double t103;
  double t104;
  double t104_tmp;
  double t105;
  double t105_tmp;
  double t106;
  double t107_tmp;
  double t108;
  double t108_tmp;
  double t109;
  double t11;
  double t110;
  double t112;
  double t112_tmp;
  double t113;
  double t114;
  double t114_tmp;
  double t115;
  double t115_tmp;
  double t120;
  double t120_tmp;
  double t121;
  double t122;
  double t123;
  double t128;
  double t128_tmp_tmp;
  double t129;
  double t13;
  double t130;
  double t130_tmp;
  double t131;
  double t131_tmp;
  double t132;
  double t132_tmp;
  double t133;
  double t14;
  double t15;
  double t155;
  double t155_tmp;
  double t156;
  double t157;
  double t157_tmp;
  double t158;
  double t158_tmp;
  double t16;
  double t163;
  double t163_tmp;
  double t164;
  double t165;
  double t165_tmp;
  double t166;
  double t166_tmp;
  double t17;
  double t170;
  double t170_tmp;
  double t171;
  double t171_tmp;
  double t172;
  double t172_tmp;
  double t173;
  double t173_tmp;
  double t174;
  double t175;
  double t175_tmp;
  double t176;
  double t176_tmp;
  double t176_tmp_tmp;
  double t177;
  double t177_tmp;
  double t18;
  double t19;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t39;
  double t4;
  double t40;
  double t41;
  double t42;
  double t43;
  double t44;
  double t45;
  double t49;
  double t5;
  double t50;
  double t51;
  double t52;
  double t53;
  double t54;
  double t54_tmp;
  double t57;
  double t6;
  double t70;
  double t71;
  double t71_tmp;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76_tmp;
  double t77_tmp;
  double t77_tmp_tmp;
  double t78;
  double t79;
  double t8;
  double t80;
  double t81;
  double t82_tmp;
  double t87;
  double t88;
  double t89;
  double t9;
  double t90;
  double t92;
  double t92_tmp;
  double t93;
  double t94;
  double t94_tmp_tmp;
  double t95;
  double t96;
  double t97;
  double t98;
  double t99;
  // JR_3_2
  //     JR = JR_3_2(L,IN2)
  //     This function was generated by the Symbolic Math Toolbox version 9.2.
  //     29-Mar-2023 20:06:39
  t2 = in2[0] * 2.0;
  t3 = in2[1] * 2.0;
  t4 = in2[0] * in2[0];
  t5 = rt_powd_snf(in2[0], 3.0);
  t6 = in2[1] * in2[1];
  t8 = in2[4] * 2.0;
  t9 = in2[3] * in2[3];
  t10 = rt_powd_snf(in2[3], 3.0);
  t11 = in2[4] * in2[4];
  t13 = t4 + t9;
  t14 = t6 + t11;
  t15 = 1.0 / t13;
  t17 = 1.0 / t14;
  t19 = std::sqrt(t13);
  t20 = std::sqrt(t14);
  t16 = t15 * t15;
  t18 = t17 * t17;
  t21 = 1.0 / t19;
  t23 = 1.0 / t20;
  t25 = l * t19;
  t26 = l * t20;
  t28 = t20 * 2.0;
  t22 = rt_powd_snf(t21, 3.0);
  t24 = rt_powd_snf(t23, 3.0);
  t29 = std::cos(t25);
  t30 = std::cos(t26);
  t31 = std::sin(t25);
  t32 = std::sin(t26);
  t39 = t4 * t29;
  t40 = t6 * t30;
  t41 = t9 * t29;
  t42 = t11 * t30;
  t43 = l * t4 * t31;
  t44 = l * t6 * t32;
  t45 = l * t11 * t32;
  t53 = t28 * t30;
  t54_tmp = in2[0] * in2[1];
  t54 = t54_tmp * t31 * t32;
  t57 = t31 * t32 * in2[3] * in2[4];
  t74 = t21 * t30 * t31;
  t75 = t23 * t29 * t32;
  t71 = in2[0] * l;
  t76_tmp = t71 * t15;
  t77_tmp_tmp = in2[1] * l;
  t77_tmp = t77_tmp_tmp * t17;
  t82_tmp = in2[0] * t22;
  t92_tmp = in2[0] * t21;
  t92 = t92_tmp * t23 * t31 * t32;
  t14 = in2[1] * t21;
  t93 = t14 * t23 * t31 * t32;
  t94_tmp_tmp = t21 * t23;
  t13 = t94_tmp_tmp * t31 * t32;
  t94 = t13 * in2[3];
  t95 = t13 * in2[4];
  t120_tmp = in2[0] * t6;
  t120 = t120_tmp * t21 * t24 * t31 * t32;
  t121 = t11 * t21 * t24 * t31 * t32 * in2[3];
  t49 = t9 + t39;
  t50 = t4 + t41;
  t51 = t11 + t40;
  t52 = t6 + t42;
  t78 = in2[0] * t74;
  t79 = in2[1] * t75;
  t80 = t74 * in2[3];
  t81 = t75 * in2[4];
  t96 = t94_tmp_tmp * t54;
  t97 = t92 * in2[4];
  t98 = t93 * in2[3];
  t99 = t94_tmp_tmp * t57;
  t87 = in2[0] * t15;
  t104_tmp = t87 * t23 * t32 * (t29 - 1.0);
  t104 = t104_tmp * in2[3];
  t105_tmp = in2[1] * t17;
  b_t105_tmp = t105_tmp * t21 * t31 * (t30 - 1.0);
  t105 = b_t105_tmp * in2[4];
  t107_tmp = t22 * t23;
  t108_tmp = t21 * t24;
  t108 = t108_tmp * t54 * in2[4];
  t112_tmp = t14 * t24;
  t112 = t112_tmp * t57;
  t114_tmp = t71 * t17 * t21 * t31;
  t114 = t114_tmp * t40;
  t115_tmp = l * t17;
  b_t115_tmp = t115_tmp * t21 * t31;
  t115 = b_t115_tmp * t42 * in2[3];
  t14 = t54_tmp * l;
  t13 = t14 * t15 * t17;
  t122 = t13 * t29 * (t30 - 1.0) * in2[3] * in2[4];
  t123 = t13 * t30 * (t29 - 1.0) * in2[3] * in2[4];
  t128_tmp_tmp = t54_tmp * t15;
  t13 = t128_tmp_tmp * t17 * (t29 - 1.0) * (t30 - 1.0);
  t128 = t13 * in2[3];
  t129 = t13 * in2[4];
  t130_tmp = t87 * t17 * (t29 - 1.0);
  t130 = t130_tmp * (t30 - 1.0) * in2[3] * in2[4];
  t131_tmp = in2[1] * t15;
  b_t131_tmp = t131_tmp * t17;
  t131 = b_t131_tmp * (t29 - 1.0) * (t30 - 1.0) * in2[3] * in2[4];
  t132_tmp = t54_tmp * t17;
  t132 = t132_tmp * t22 * t31 * (t30 - 1.0) * in2[3] * in2[4];
  t13 = t128_tmp_tmp * t24;
  t133 = t13 * t32 * (t29 - 1.0) * in2[3] * in2[4];
  t155_tmp = t13 * (t29 - 1.0);
  t155 = t155_tmp * t45 * in2[3];
  t156 = t14 * t9 * t17 * t22 * t31 * (t30 - 1.0) * in2[4];
  t157_tmp = t87 * t24 * (t29 - 1.0);
  t157 = t157_tmp * t44 * in2[3] * in2[4];
  t158_tmp = t105_tmp * t22 * (t30 - 1.0);
  t158 = t158_tmp * t43 * in2[3] * in2[4];
  t163_tmp = in2[1] * t2;
  t163 = t163_tmp * t11 * t15 * t18 * (t29 - 1.0) * (t30 - 1.0) * in2[3];
  t164 = t163_tmp * t9 * t16 * t17 * (t29 - 1.0) * (t30 - 1.0) * in2[4];
  t165_tmp = t2 * t6;
  t165 = t165_tmp * t15 * t18 * (t29 - 1.0) * (t30 - 1.0) * in2[3] * in2[4];
  t166_tmp = t54_tmp * t2 * t16;
  t166 = t166_tmp * t17 * (t29 - 1.0) * (t30 - 1.0) * in2[3] * in2[4];
  t70 = t19 * 2.0 - t43;
  t71_tmp = t71 * t9;
  t71 = t2 - t71_tmp * t21 * t31;
  t87 = t2 * t29 - l * t5 * t21 * t31;
  t88 = t3 * t30 - l * rt_powd_snf(in2[1], 3.0) * t23 * t32;
  t89 = t29 * in2[3] * 2.0 - l * t10 * t21 * t31;
  t90 = t8 * t30 - l * rt_powd_snf(in2[4], 3.0) * t23 * t32;
  t101 = t77_tmp * t78 * in2[4];
  t103 = t77_tmp * t80 * in2[4];
  t106 = l * t96;
  t109 = l * t97;
  t110 = l * t98;
  t113 = l * t99;
  t13 = t128 * in2[4];
  t72 = t3 + in2[1] * t23 * -t45;
  t73 = t8 + t23 * -t44 * in2[4];
  t170_tmp = t131_tmp * t23 * t32;
  t170 = (t78 + t104 * in2[4]) + t170_tmp * t49;
  t14 = in2[0] * t17;
  t171_tmp = t14 * t21 * t31;
  t171 = (t79 + t105 * in2[3]) + t171_tmp * t51;
  t172_tmp = t15 * t23 * t32;
  b_t172_tmp = t172_tmp * t50;
  t172 = (t80 + in2[1] * t104) + b_t172_tmp * in2[4];
  t173_tmp = t17 * t21 * t31;
  b_t173_tmp = t173_tmp * t52;
  t173 = (t81 + in2[0] * t105) + b_t173_tmp * in2[3];
  t105_tmp = t15 * t17;
  t174 = (-t96 + t13) + t105_tmp * t49 * t51;
  t175_tmp = b_t131_tmp * (t30 - 1.0);
  b_t175_tmp = t130_tmp * t52;
  c_t175_tmp = t175_tmp * t49;
  t175 = (-t97 + b_t175_tmp * in2[3]) + c_t175_tmp * in2[4];
  t176_tmp = t130_tmp * t51;
  b_t176_tmp = t175_tmp * t50;
  t176 = (-t98 + t176_tmp * in2[3]) + b_t176_tmp * in2[4];
  t177_tmp = t105_tmp * t50;
  t177 = (-t99 + t13) + t177_tmp * t52;
  c_t176_tmp = l * t15;
  d_t176_tmp = in2[1] * t4;
  e_t176_tmp = t77_tmp_tmp * t15;
  f_t176_tmp = c_t176_tmp * t17;
  g_t176_tmp = t76_tmp * t17;
  h_t176_tmp = e_t176_tmp * t17;
  i_t176_tmp = t14 * t22 * t31;
  j_t176_tmp = g_t176_tmp * t29;
  k_t176_tmp = h_t176_tmp * (t30 - 1.0);
  l_t176_tmp = in2[1] * t9;
  m_t176_tmp = t107_tmp * t172;
  JR[0] = (-t176 * (((((t106 - t122) + t132) - t173_tmp * t51) -
                     f_t176_tmp * t39 * t51) +
                    t4 * t17 * t22 * t31 * t51) +
           t177 * (((((t105 - t109) - i_t176_tmp * t52 * in2[3]) +
                     k_t176_tmp * t39 * in2[4]) +
                    j_t176_tmp * t52 * in2[3]) -
                   d_t176_tmp * t17 * t22 * t31 * (t30 - 1.0) * in2[4])) +
          m_t176_tmp * (((((-in2[0] * t57 + l_t176_tmp * t31 * t32) +
                           in2[1] * t25 * t32 * t39) +
                          t5 * t26 * t30 * t31) +
                         in2[0] * t9 * t26 * t30 * t31) +
                        in2[0] * t25 * t29 * t32 * in2[3] * in2[4]);
  t99 = t4 * t22;
  t77_tmp_tmp = t2 * t16;
  t5 = t77_tmp_tmp * t17;
  n_t176_tmp = t105_tmp * (t29 - 1.0);
  t176_tmp_tmp = t17 * t22;
  o_t176_tmp = t176_tmp_tmp * t43;
  p_t176_tmp = in2[0] * t2 * t16 * t17 * (t29 - 1.0);
  q_t176_tmp = t163_tmp * t16 * t17 * (t30 - 1.0);
  t97 = t94_tmp_tmp * ((t54 + t57) - t19 * t20 * t29 * t30);
  t98 = c_t176_tmp * t23 * t32;
  e_t176_tmp = e_t176_tmp * t23 * t32;
  c_t176_tmp *= t30;
  JR[1] =
      (-t173 * (((((((t95 - n_t176_tmp * t52 * in2[3]) +
                     o_t176_tmp * t52 * in2[3]) -
                    t175_tmp * t87 * in2[4]) +
                   t98 * t39 * in2[4]) -
                  t99 * t23 * t31 * t32 * in2[4]) +
                 p_t176_tmp * t52 * in2[3]) +
                q_t176_tmp * t49 * in2[4]) -
       t171 * (((((((t93 - t131) + t158) + t166) - t105_tmp * t51 * t87) +
                 t5 * t49 * t51) -
                d_t176_tmp * t22 * t23 * t31 * t32) +
               e_t176_tmp * t39)) +
      t97 *
          (((((((t74 + c_t176_tmp * t39) - t99 * t30 * t31) + t170_tmp * t87) +
              t172_tmp * (t29 - 1.0) * in2[3] * in2[4]) +
             t107_tmp * t32 * -t43 * in2[3] * in2[4]) -
            t54_tmp * t16 * t23 * t32 * t49 * 2.0) -
           t4 * t16 * t23 * t32 * (t29 - 1.0) * in2[3] * in2[4] * 2.0);
  d_t176_tmp = t76_tmp * t81 * in2[3] - t82_tmp * t23 * t57;
  t99 = t76_tmp * t79 * in2[3] - t107_tmp * t54 * in2[3];
  t80 = t82_tmp * t30 * t31 * in2[3] - t76_tmp * t29 * t30 * in2[3];
  b_t131_tmp = in2[1] * t22 * t23 * t32;
  t96 = t105_tmp * t52;
  JR[2] =
      (-t175 * (((((d_t176_tmp - t131) + t158) + t166) - t96 * t71) +
                t5 * t50 * t52) -
       t174 *
           (((((t99 - n_t176_tmp * t51 * in2[3]) + o_t176_tmp * t51 * in2[3]) -
              t175_tmp * t71 * in2[4]) +
             p_t176_tmp * t51 * in2[3]) +
            q_t176_tmp * t50 * in2[4])) -
      t170 * (((((t80 - t172_tmp * t71 * in2[4]) -
                 t170_tmp * (t29 - 1.0) * in2[3]) +
                b_t131_tmp * t43 * in2[3]) +
               t77_tmp_tmp * t23 * t32 * t50 * in2[4]) +
              t166_tmp * t23 * t32 * (t29 - 1.0) * in2[3]);
  t5 = t115_tmp * t29;
  n_t176_tmp = in2[1] * t24 * t29 * t32 * in2[4] - t77_tmp * t29 * t30 * in2[4];
  JR[3] =
      (t176 * (((((((t75 + t5 * t40) - t6 * t24 * t29 * t32) + t171_tmp * t88) +
                  t173_tmp * (t30 - 1.0) * in2[3] * in2[4]) +
                 t108_tmp * t31 * -t44 * in2[3] * in2[4]) -
                t54_tmp * t18 * t21 * t31 * t51 * 2.0) -
               t6 * t18 * t21 * t31 * (t30 - 1.0) * in2[3] * in2[4] * 2.0) -
       t177 * (((((n_t176_tmp - t173_tmp * t72 * in2[3]) -
                  t171_tmp * (t30 - 1.0) * in2[4]) +
                 t92_tmp * t24 * t31 * t44 * in2[4]) +
                t3 * t18 * t21 * t31 * t52 * in2[3]) +
               t165_tmp * t18 * t21 * t31 * (t30 - 1.0) * in2[4])) +
      t172 * (((((t92 + t103) + t114) - t112) - t120) + l * t79);
  o_t176_tmp = t105_tmp * (t30 - 1.0);
  t77_tmp_tmp = t15 * t24;
  p_t176_tmp = t77_tmp_tmp * t44;
  q_t176_tmp = t163_tmp * t15 * t18 * (t29 - 1.0);
  t71 = in2[1] * t3 * t15 * t18 * (t30 - 1.0);
  t78 = t3 * t15 * t18;
  t87 = t131_tmp * t24;
  t105_tmp = t101 - t108;
  JR[4] = (-t171 * (((((((t92 + t114) - t120) - t130) + t157) + t165) +
                     t78 * t49 * t51) +
                    t87 * t49 * (t44 - t53)) -
           t173 * (((((t105_tmp - o_t176_tmp * t49 * in2[4]) +
                      p_t176_tmp * t49 * in2[4]) -
                     t155_tmp * in2[3] * (t28 - t45)) +
                    q_t176_tmp * t52 * in2[3]) +
                   t71 * t49 * in2[4])) -
          t97 * (((((t106 - t123) + t133) - t172_tmp * t49) -
                  f_t176_tmp * t40 * t49) +
                 t6 * t15 * t24 * t32 * t49);
  t14 = t87 * t32;
  g_t176_tmp *= t29 - 1.0;
  h_t176_tmp *= t30;
  t13 = t103 - t112;
  JR[5] =
      (-t174 * (((((((t94 - o_t176_tmp * t50 * in2[4]) +
                     p_t176_tmp * t50 * in2[4]) -
                    t130_tmp * t88 * in2[3]) +
                   b_t115_tmp * t40 * in2[3]) -
                  t6 * t21 * t24 * t31 * t32 * in2[3]) +
                 q_t176_tmp * t51 * in2[3]) +
                t71 * t50 * in2[4]) -
       t175 * (((((t13 - t130) + t157) + t165) - t177_tmp * t72) +
               t78 * t50 * t52)) +
      t170 *
          (((((t104 - t110) - t14 * t50 * in2[4]) + g_t176_tmp * t40 * in2[3]) +
            h_t176_tmp * t50 * in2[4]) -
           t120_tmp * t15 * t24 * t32 * (t29 - 1.0) * in2[3]);
  JR[6] = 0.0;
  JR[7] = 0.0;
  JR[8] = 0.0;
  JR[9] =
      (-t177 *
           (((((t113 - t122) + t132) - b_t173_tmp) - f_t176_tmp * t41 * t52) +
            t9 * t17 * t22 * t31 * t52) +
       t176 * (((((t105 - t110) - i_t176_tmp * t51 * in2[3]) +
                 j_t176_tmp * t51 * in2[3]) +
                k_t176_tmp * t41 * in2[4]) -
               l_t176_tmp * t17 * t22 * t31 * (t30 - 1.0) * in2[4])) +
      m_t176_tmp * (((((-t54 * in2[3] + t10 * t26 * t30 * t31) +
                       t4 * t31 * t32 * in2[4]) +
                      t25 * t32 * t41 * in2[4]) +
                     t4 * t26 * t30 * t31 * in2[3]) +
                    t54_tmp * t25 * t29 * t32 * in2[3]);
  i_t176_tmp = t3 * t16;
  j_t176_tmp = t2 * t9 * t16;
  k_t176_tmp = t16 * t17;
  m_t176_tmp = j_t176_tmp * t17 * (t29 - 1.0);
  o_t176_tmp = t71_tmp * t17 * t22 * t31;
  p_t176_tmp = i_t176_tmp * t17 * (t30 - 1.0);
  JR[10] = (-t173 * (((((d_t176_tmp - b_t175_tmp) + m_t176_tmp * t52) +
                       o_t176_tmp * t52) -
                      t158_tmp * t70 * in2[3] * in2[4]) +
                     p_t176_tmp * t49 * in2[3] * in2[4]) -
            t171 * (((((t99 - t129) + t156) + t164) +
                     k_t176_tmp * t49 * t51 * in2[3] * 2.0) -
                    t176_tmp_tmp * t51 * t70 * in2[3])) -
           t97 * (((((t80 - t104_tmp * in2[4]) - b_t131_tmp * t70 * in2[3]) +
                    i_t176_tmp * t23 * t32 * t49 * in2[3]) +
                   j_t176_tmp * t23 * t32 * (t29 - 1.0) * in2[4]) +
                  t71_tmp * t22 * t23 * t31 * t32 * in2[4]);
  d_t176_tmp = t9 * t22;
  JR[11] =
      (-t175 * (((((((t95 - t129) + t156) + t164) - t96 * t89) +
                  k_t176_tmp * t50 * t52 * in2[3] * 2.0) +
                 t98 * t41 * in2[4]) -
                d_t176_tmp * t23 * t31 * t32 * in2[4]) -
       t174 * (((((((t93 - t176_tmp) - l_t176_tmp * t22 * t23 * t31 * t32) -
                   t175_tmp * t89 * in2[4]) +
                  m_t176_tmp * t51) +
                 e_t176_tmp * t41) +
                o_t176_tmp * t51) +
               p_t176_tmp * t50 * in2[3] * in2[4])) +
      t170 * (((((((t74 + c_t176_tmp * t41) - d_t176_tmp * t30 * t31) -
                  l * t9 * t22 * t23 * t54) +
                 t172_tmp * t89 * in2[4]) -
                t16 * t23 * t32 * t50 * in2[3] * in2[4] * 2.0) +
               t128_tmp_tmp * t23 * t32 * (t29 - 1.0)) -
              t54_tmp * t9 * t16 * t23 * t32 * (t29 - 1.0) * 2.0);
  t176_tmp = t3 * t11;
  JR[12] = (t177 * (((((((t75 + t5 * t42) - t11 * t24 * t29 * t32) +
                        t173_tmp * t90 * in2[3]) -
                       t18 * t21 * t31 * t52 * in2[3] * in2[4] * 2.0) +
                      t132_tmp * t21 * t31 * (t30 - 1.0)) +
                     t54_tmp * t21 * t24 * t31 * -t45) -
                    t54_tmp * t11 * t18 * t21 * t31 * (t30 - 1.0) * 2.0) -
            t176 * (((((n_t176_tmp - t171_tmp * t73) - b_t105_tmp * in2[3]) +
                      t112_tmp * t31 * t45 * in2[3]) +
                     t2 * t18 * t21 * t31 * t51 * in2[4]) +
                    t176_tmp * t18 * t21 * t31 * (t30 - 1.0) * in2[3])) +
           t172 * (((((t94 + t101) + t115) - t108) - t121) + l * t81);
  c_t176_tmp = in2[0] * t11;
  d_t176_tmp = t8 * t15 * t18;
  e_t176_tmp = t87 * t45;
  t176_tmp = t176_tmp * t15 * t18 * (t30 - 1.0);
  i_t176_tmp = t2 * t15 * t18 * (t29 - 1.0);
  JR[13] =
      (-t173 * (((((((t92 - c_t175_tmp) + e_t176_tmp * t49) -
                    c_t176_tmp * t21 * t24 * t31 * t32) +
                   t176_tmp * t49) +
                  t114_tmp * t42) +
                 i_t176_tmp * t52 * in2[3] * in2[4]) +
                t157_tmp * in2[3] * in2[4] * (t45 - t53)) -
       t171 * (((((t105_tmp - t128) + t155) + t163) -
                t77_tmp_tmp * t49 * in2[4] * (t28 - t44)) +
               d_t176_tmp * t49 * t51)) +
      t97 *
          (((((t104 - t109) - t14 * t49 * in2[4]) + g_t176_tmp * t42 * in2[3]) +
            h_t176_tmp * t49 * in2[4]) -
           c_t176_tmp * t15 * t24 * t32 * (t29 - 1.0) * in2[3]);
  JR[14] =
      (-t170 *
           (((((t113 - t123) + t133) - b_t172_tmp) - f_t176_tmp * t42 * t50) +
            t11 * t15 * t24 * t32 * t50) -
       t175 * (((((((t94 + t115) - t121) - t128) + t155) + t163) -
                t177_tmp * t90) +
               d_t176_tmp * t50 * t52)) -
      t174 * (((((t13 - b_t176_tmp) + e_t176_tmp * t50) -
                t130_tmp * t73 * in2[3]) +
               t176_tmp * t50) +
              i_t176_tmp * t51 * in2[3] * in2[4]);
  JR[15] = 0.0;
  JR[16] = 0.0;
  JR[17] = 0.0;
}

// End of code generation (JR_3_2.cpp)
